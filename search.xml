<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sqlilabs</title>
      <link href="/sqlilabs.html"/>
      <url>/sqlilabs.html</url>
      
        <content type="html"><![CDATA[<h2 id="sqlilabs靶场介绍"><a href="#sqlilabs靶场介绍" class="headerlink" title="sqlilabs靶场介绍"></a>sqlilabs靶场介绍</h2><p>SQLI，sql injection，我们称之为sql注入。何为sql，英文：Structured Query Language，叫做结构化查询语言。常见的结构化数据库有MySQL，MS SQL ,Oracle以及Postgresql。Sql语言就是我们在管理数据库时用到的一种。在我们的应用系统使用sql语句进行管理应用数据库时，往往采用拼接的方式形成一条完整的数据库语言，而危险的是，在拼接sql语句的时候，我们可以改变sql语句。从而让数据执行我们想要执行的语句，这就是我们常说的sql注入。而Sqli-labs是一个印度程序员写的，<br>用来学习sql注入的一个游戏教程。<br>原文链接：<a href="https://blog.csdn.net/Joker_Dgh/article/details/123913722">https://blog.csdn.net/Joker_Dgh/article/details/123913722</a></p><h2 id="进入靶场"><a href="#进入靶场" class="headerlink" title="进入靶场"></a>进入靶场</h2><p><img src="/img/9.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php学习2</title>
      <link href="/php%E5%AD%A6%E4%B9%A02.html"/>
      <url>/php%E5%AD%A6%E4%B9%A02.html</url>
      
        <content type="html"><![CDATA[<h2 id="PHP-数组"><a href="#PHP-数组" class="headerlink" title="PHP 数组"></a>PHP 数组</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$cars=array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</span><br><span class="line">echo &quot;I like &quot; . $cars[0] . &quot;, &quot; . $cars[1] . &quot; and &quot; . $cars[2] . &quot;.&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在 PHP 中，array() 函数用于创建数组</p><h3 id="获取数组的长度-count-函数"><a href="#获取数组的长度-count-函数" class="headerlink" title="获取数组的长度 - count() 函数"></a>获取数组的长度 - count() 函数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$cars=array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</span><br><span class="line">echo count($cars);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="遍历数值数组"><a href="#遍历数值数组" class="headerlink" title="遍历数值数组"></a>遍历数值数组</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$cars=array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</span><br><span class="line">$arrlength=count($cars);</span><br><span class="line"> </span><br><span class="line">for($x=0;$x&lt;$arrlength;$x++)</span><br><span class="line">&#123;</span><br><span class="line">    echo $cars[$x];</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="PHP-关联数组"><a href="#PHP-关联数组" class="headerlink" title="PHP 关联数组"></a>PHP 关联数组</h3><p>这里有两种创建关联数组的方法：<br>$age&#x3D;array(“Peter”&#x3D;&gt;”35”,”Ben”&#x3D;&gt;”37”,”Joe”&#x3D;&gt;”43”);<br>or:<br>$age[‘Peter’]&#x3D;”35”;<br>$age[‘Ben’]&#x3D;”37”;<br>$age[‘Joe’]&#x3D;”43”;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$age=array(&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;);</span><br><span class="line">echo &quot;Peter is &quot; . $age[&#x27;Peter&#x27;] . &quot; years old.&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="PHP-数组排序"><a href="#PHP-数组排序" class="headerlink" title="PHP 数组排序"></a>PHP 数组排序</h3><p>sort() - 对数组进行升序排列<br>rsort() - 对数组进行降序排列<br>asort() - 根据关联数组的值，对数组进行升序排列<br>ksort() - 根据关联数组的键，对数组进行升序排列<br>arsort() - 根据关联数组的值，对数组进行降序排列<br>krsort() - 根据关联数组的键，对数组进行降序排列<br>$arr &#x3D; (‘a’&#x3D;&gt;’apple’,’b’&#x3D;&gt;’banana’);其中，a、b 是这个数组的键值，apple、banana 是值。<br>php 数组的键值可以是字符串，可以是数字，也可以从任何一个数字开始作为数组的键值开端。<br>$arr &#x3D; array(0,1,2);像这个数组，键值没有出现，那么键值就是默认的从 0 开始，等同于 $arr &#x3D; array(0&#x3D;&gt;0,1&#x3D;&gt;1,2&#x3D;&gt;2)</p><h3 id="PHP-超级全局变量"><a href="#PHP-超级全局变量" class="headerlink" title="PHP 超级全局变量"></a>PHP 超级全局变量</h3><p>PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。<br>以下列举出几个常用超级全局变量：</p><h3 id="PHP-GLOBALS"><a href="#PHP-GLOBALS" class="headerlink" title="PHP $GLOBALS"></a>PHP $GLOBALS</h3><p>$GLOBALS 是PHP的一个超级全局变量组，在一个PHP脚本的全部作用域中都可以访问。<br>$GLOBALS 是一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php学习1</title>
      <link href="/php%E5%AD%A6%E4%B9%A01.html"/>
      <url>/php%E5%AD%A6%E4%B9%A01.html</url>
      
        <content type="html"><![CDATA[<h2 id="php语法"><a href="#php语法" class="headerlink" title="php语法"></a>php语法</h2><p>设置常量，使用 define() 函数，函数语法如下：<br>bool define ( string $name , mixed $value [, bool $case_insensitive &#x3D; false ] )<br>常量定义后默认是全局，即使定义在函数外也可在函数内部使用<br>Php并置运算符：（.)用于将两个字符串连接在一起，<br>Strpos（）函数用于查找字符串中的一个字符或一段指定文本，若找到则返回匹配的首字符位置，若找不到则返回false（字符串的首字符位置为0）<br><img src="/img/php1.png"></p><p>若第一次取反后是正数则直接计算取反后的十进制数即可<br>var_dump()———&gt;&gt;输出展示展示代码内容，结构与类型<br>a.&#x3D;b等同于a&#x3D;a.b，即两个字符串相连的结果<br>(expr1) ? (expr2) : (expr3)<br>对 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3<br>PHP_EOL 是一个换行符<br>$c &#x3D; $a &lt;&#x3D;&gt; $b：如果 $a &gt; $b, 则 $c 的值为 1；如果 $a &#x3D;&#x3D; $b, 则 $c 的值为 0；如果 $a &lt; $b, 则 $c 的值为 -1</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yh w</title>
      <link href="/yh-w.html"/>
      <url>/yh-w.html</url>
      
        <content type="html"><![CDATA[<h2 id="666"><a href="#666" class="headerlink" title="666"></a>666</h2><p>啊啊啊啊啊啊啊啊啊啊<br>啊啊啊啊啊啊啊啊啊啊</p><h3 id="66"><a href="#66" class="headerlink" title="66"></a>66</h3><p>啊啊啊啊啊啊啊啊啊啊<br>啊啊啊啊啊啊啊啊啊啊</p><h2 id="666-1"><a href="#666-1" class="headerlink" title="666"></a>666</h2><p>hhhhhhhhhhhhhhhhhhh<br>hhhh<br>hhhhhhhh</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>yhw</title>
      <link href="/yhw.html"/>
      <url>/yhw.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">a</span> () &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c语言学习</title>
      <link href="/%E7%AF%87%E5%A4%B4.html"/>
      <url>/%E7%AF%87%E5%A4%B4.html</url>
      
        <content type="html"><![CDATA[<p>下面将跟进本人c语言的学习进度</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world.html"/>
      <url>/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
